{"version":3,"sources":["contex/ThemeContex.jsx","components/Nav.jsx","components/Footer.jsx","components/Home/Slider.jsx","components/Home/Home.jsx","contex/FlowerReducer.jsx","contex/FlowerState.jsx","components/Flowers/AddFlower.jsx","components/Flowers/Flowers.jsx","components/Flower/Flower.jsx","App.jsx","serviceWorker.js","index.jsx"],"names":["ThemeContex","createContext","ThemeContexProvider","props","handleTheme","defaultTheme","state","setState","dark","light","children","this","Provider","value","Component","Nav","Consumer","contex","style","background","className","to","onClick","src","alt","exact","Footer","href","target","Slider","useState","url","id","sliderPhotos","current","setCurrent","animation","setAnimation","pause","setPause","handleChangeImg","direction","setTimeout","length","useEffect","interval","setInterval","clearInterval","currentImg","map","element","index","key","aria-hidden","onMouseOver","onFocus","onMouseOut","onBlur","type","Home","action","flowers","payload","initialState","name","FlowerContex","FlowerProvider","useReducer","FlowerReducer","dispatch","JSON","parse","localStorage","getItem","setItem","stringify","addFlower","flower","localFlowers","push","removeFlower","splice","console","log","forEach","AddFlower","setFlower","error","setError","handleInput","e","onSubmit","preventDefault","htmlFor","onChange","autoComplete","Flowers","useContext","FLOWER_LIST","backgroundImage","theme","Flower","find","match","params","history","App","path","component","Boolean","window","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.37eb5917.chunk.js","sourcesContent":["import React, { createContext, Component } from 'react';\r\n\r\nexport const ThemeContex = createContext();\r\n\r\nclass ThemeContexProvider extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      defaultTheme: true,\r\n      dark: 'radial-gradient(circle, rgba(137,121,247,0.3) 0%, rgba(190,159,180,0.3) 100%)',\r\n      light: 'radial-gradient(circle, rgba(142, 231, 13, 0.3) 16%,rgba(25, 205, 67, 0.3) 73%)',\r\n    };\r\n  }\r\n\r\n  handleTheme = () => {\r\n    const { defaultTheme } = this.state;\r\n    this.setState({\r\n      defaultTheme: !defaultTheme,\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { children } = this.props;\r\n    return (\r\n      <ThemeContex.Provider value={{ ...this.state, handleTheme: this.handleTheme }}>\r\n        {children}\r\n      </ThemeContex.Provider>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ThemeContexProvider;\r\n","import React from 'react';\r\nimport { NavLink, Link } from 'react-router-dom';\r\nimport { ThemeContex } from '../contex/ThemeContex';\r\n\r\nconst Nav = () => (\r\n  <ThemeContex.Consumer>\r\n    {(contex) => (\r\n      <nav style={{ background: contex.defaultTheme ? contex.light : contex.dark }}>\r\n        <div className=\"logo\">\r\n          <Link to=\"/\" onClick={() => contex.handleTheme()}>\r\n            <h1>\r\n              Flowerly\r\n            </h1>\r\n          </Link>\r\n          <img src=\"https://cdn.pixabay.com/photo/2016/04/01/09/00/abstract-1299099_960_720.png\" alt=\"flowers\" />\r\n        </div>\r\n        <ul>\r\n          <li>\r\n            <NavLink exact to=\"/flowers\">Flowers</NavLink>\r\n          </li>\r\n          <li>\r\n            <NavLink exact to=\"/\">Home</NavLink>\r\n          </li>\r\n        </ul>\r\n      </nav>\r\n    )}\r\n  </ThemeContex.Consumer>\r\n\r\n);\r\n\r\nexport default Nav;\r\n","import React from 'react';\r\n\r\nconst Footer = () => (\r\n  <footer>\r\n    <h2>Copyright by @Niria</h2>\r\n    <ul>\r\n      <li>\r\n        <a href=\"https://www.facebook.com/\" target=\"self\">\r\n          <img src=\"https://image.flaticon.com/icons/svg/1384/1384005.svg\" alt=\"facebook\" />\r\n        </a>\r\n      </li>\r\n      <li>\r\n        <a href=\"https://twitter.com/?lang=en\" target=\"self\">\r\n          <img src=\"https://image.flaticon.com/icons/svg/733/733635.svg\" alt=\"twitter\" />\r\n        </a>\r\n      </li>\r\n      <li>\r\n        <a href=\"https://www.instagram.com/oozy_tattoo/\" target=\"self\">\r\n          <img src=\"https://image.flaticon.com/icons/svg/733/733614.svg\" alt=\"instagram\" />\r\n        </a>\r\n\r\n      </li>\r\n    </ul>\r\n  </footer>\r\n);\r\n\r\nexport default Footer;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { ThemeContex } from '../../contex/ThemeContex';\r\n\r\nconst Slider = () => {\r\n  const [sliderPhotos] = useState([\r\n    { url: 'https://cdn.pixabay.com/photo/2015/10/09/00/55/lotus-978659_960_720.jpg', id: 0 },\r\n    { url: 'https://cdn.pixabay.com/photo/2015/04/19/08/33/flower-729512_960_720.jpg', id: 1 },\r\n    { url: 'https://cdn.pixabay.com/photo/2018/01/05/16/24/rose-3063284_960_720.jpg', id: 2 }]);\r\n  const [current, setCurrent] = useState(0);\r\n  const [animation, setAnimation] = useState(true);\r\n  const [pause, setPause] = useState(false);\r\n\r\n  const handleChangeImg = (direction) => {\r\n    switch (direction) {\r\n      case 'right': {\r\n        setAnimation(false);\r\n        setTimeout(() => {\r\n          if (current === sliderPhotos.length - 1) { setCurrent(0); } else { setCurrent(current + 1); }\r\n        }, 1000);\r\n        setTimeout(() => {\r\n          setAnimation(true);\r\n        }, 1000);\r\n        break;\r\n      }\r\n      case 'left': {\r\n        setAnimation(false);\r\n        setTimeout(() => {\r\n          if (current === 0) { setCurrent(sliderPhotos.length - 1); } else { setCurrent(current - 1); }\r\n        }, 1000);\r\n        setTimeout(() => {\r\n          setAnimation(true);\r\n        }, 1000);\r\n        break;\r\n      }\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const interval = setInterval(() => {\r\n      if (!pause) { handleChangeImg('right'); }\r\n    }, 2000);\r\n    return () => clearInterval(interval);\r\n  });\r\n\r\n  const currentImg = sliderPhotos.map((element, index) => {\r\n    if (current === index) {\r\n      return <li className=\"activeImg\" key={element.id} onClick={() => setCurrent(element.id)} aria-hidden=\"true\">.</li>;\r\n    }\r\n    return (\r\n      <li\r\n        key={element.id}\r\n        onClick={() => setCurrent(element.id)}\r\n        aria-hidden=\"true\"\r\n      >\r\n        .\r\n      </li>\r\n    );\r\n  });\r\n\r\n  return (\r\n    <ThemeContex.Consumer>\r\n      {(contex) => (\r\n        <div\r\n          style={{ background: contex.defaultTheme ? contex.light : contex.dark }}\r\n          className=\"home_slider\"\r\n          onMouseOver={() => setPause(true)}\r\n          onFocus={() => 0}\r\n          onMouseOut={() => setPause(false)}\r\n          onBlur={() => 0}\r\n        >\r\n          <div className=\"buttons\">\r\n            <button style={{ background: contex.defaultTheme ? contex.light : contex.dark }} type=\"button\" onClick={() => handleChangeImg('left')}>\r\n              <img src=\"https://image.flaticon.com/icons/svg/271/271220.svg\" alt=\"left-arrow\" />\r\n            </button>\r\n            <button style={{ background: contex.defaultTheme ? contex.light : contex.dark }} type=\"button\" onClick={() => handleChangeImg('right')}>\r\n              <img src=\"https://image.flaticon.com/icons/svg/271/271228.svg\" alt=\"right-arrow\" />\r\n            </button>\r\n          </div>\r\n          <img className={`home_img ${animation ? 'show' : 'hide'}`} src={sliderPhotos[current].url} alt=\"img\" />\r\n          <ul className=\"currentImg\">\r\n            {currentImg}\r\n          </ul>\r\n        </div>\r\n      )}\r\n    </ThemeContex.Consumer>\r\n  );\r\n};\r\n\r\nexport default Slider;\r\n","import React from 'react';\r\nimport Slider from './Slider';\r\n\r\nconst Home = () => (\r\n  <section className=\"home\">\r\n\r\n    <div className=\"home_wrap\">\r\n      <div className=\"home_wrap-description\">\r\n        <h1> Flowery Decorative</h1>\r\n        <p>\r\n          Lorem ipsum dolor sit amet consectetur adipisicing elit. Itaque doloremque nulla, repellat sint, nam hic veniam blanditiis ex dignissimos rem doloribus corrupti voluptates odio, facere soluta at neque consectetur commodi.\r\n        </p>\r\n      </div>\r\n    </div>\r\n    <Slider />\r\n  </section>\r\n);\r\n\r\nexport default Home;\r\n","export default (state, action) =>{\r\n  switch (action.type) {\r\n    case 'ADD_FLOWER':{\r\n      return{...state, flowers: [...state.flowers, action.payload]};\r\n    }\r\n    case 'DELETE_FLOWER':{\r\n      return{...state, flowers: action.payload};\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};","import React, { createContext, useReducer } from 'react';\r\nimport FlowerReducer from './FlowerReducer';\r\n\r\nconst initialState = {\r\n  flowers: [\r\n    { id: 1, name: 'Orchid', url: 'https://cdn.pixabay.com/photo/2016/03/30/22/04/orchid-1291675_960_720.jpg' },\r\n    { id: 2, name: 'Rose', url: 'https://cdn.pixabay.com/photo/2016/09/22/17/41/rose-1687884_960_720.jpg' },\r\n    { id: 3, name: 'Bloosom', url: 'https://cdn.pixabay.com/photo/2016/03/16/13/41/cherry-blossom-1260641_960_720.jpg' },\r\n    { id: 4, name: 'Daisy', url: 'https://cdn.pixabay.com/photo/2015/04/30/18/53/daisy-747320_960_720.jpg' },\r\n  ],\r\n};\r\n\r\nexport const FlowerContex = createContext(initialState);\r\n\r\n\r\nexport const FlowerProvider = ({ children }) => {\r\n  const [state, dispatch] = useReducer(FlowerReducer, initialState);\r\n\r\n  if(JSON.parse(localStorage.getItem('flowers'))===null){\r\n    localStorage.setItem('flowers', JSON.stringify(state.flowers));\r\n  }\r\n  state.flowers=[...JSON.parse(localStorage.getItem('flowers'))];\r\n\r\n  const addFlower = (flower) =>{\r\n    flower.id = state.flowers.length+1;\r\n    const localFlowers = JSON.parse(localStorage.getItem('flowers')) ;\r\n    localFlowers.push(flower);\r\n    localStorage.setItem('flowers', JSON.stringify(localFlowers));\r\n\r\n    dispatch({\r\n      type: 'ADD_FLOWER',\r\n      payload: flower\r\n    });\r\n  };\r\n\r\n  const removeFlower = (id) =>{\r\n    \r\n    const localFlowers = JSON.parse(localStorage.getItem('flowers')) ;\r\n    localFlowers.splice(id-1, 1);\r\n    console.log(localFlowers);\r\n    localFlowers.forEach((element, index) => {\r\n      element.id = index+1;\r\n    });\r\n    localStorage.setItem('flowers', JSON.stringify(localFlowers));\r\n\r\n    dispatch({\r\n      type: 'ADD_FLOWER',\r\n      payload: localFlowers\r\n    });\r\n  };\r\n\r\n  return <FlowerContex.Provider value={{flowers: state.flowers, addFlower, removeFlower}}>{children}</FlowerContex.Provider>;\r\n};\r\n\r\n\r\n\r\n","import React, {useState} from 'react';\r\n\r\nconst AddFlower = ({addFlower}) => {\r\n  const [flower, setFlower] = useState({id: null, name: '', url: '' });\r\n  const [error, setError] = useState(false);\r\n\r\n  const handleSubmit = (e) =>{\r\n    e.preventDefault();\r\n    console.log(1);\r\n    console.log('Submit', flower);\r\n    if(flower.name.length>3  && flower.url.length>5){\r\n      addFlower(flower);\r\n      setError(false);\r\n      setFlower({id: null, name: '', url: '' });\r\n    }\r\n    else{\r\n      setError(true);\r\n    }\r\n\r\n  };\r\n\r\n  const handleInput = (e) =>{\r\n    switch(e.target.id){\r\n      case 'name':\r\n        setFlower({id:null,name:e.target.value, url:flower.url });\r\n        break;\r\n      case 'url':\r\n        setFlower({id:null,name:flower.name,url:e.target.value});\r\n        break;\r\n      default:\r\n      break;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <div>\r\n        <label htmlFor=\"name\">\r\n          Flower name\r\n          <input type=\"text\" id=\"name\" onChange={handleInput} autoComplete=\"off\" />\r\n        </label>\r\n        <label htmlFor=\"url\">\r\n          Flower URL\r\n          <input type=\"text\" id=\"url\" onChange={handleInput} autoComplete=\"off\" />\r\n        </label>\r\n      </div>\r\n      <button type=\"submit\">Submit</button>\r\n      {error === true &&\r\n      <h1 className=\"red\">-Error-</h1>}\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default AddFlower;\r\n","import React,{useContext} from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport {FlowerContex} from '../../contex/FlowerState';\r\nimport {ThemeContex } from '../../contex/ThemeContex';\r\nimport AddFlower from './AddFlower';\r\n\r\n\r\n\r\nconst Flowers = () => {\r\n\r\n  const contex = useContext(FlowerContex);\r\n  console.log(contex.flowers);\r\n\r\n  const FLOWER_LIST = contex.flowers.length!==0 ? contex.flowers.map((flower)=>{\r\n    return(\r\n      <li key={flower.id}>\r\n        <div style={{backgroundImage: `url(${flower.url})`}} />\r\n        <Link to={`/flowers/${flower.name}`}>\r\n          <h1>{flower.name}</h1>\r\n        </Link>\r\n      </li>\r\n    );\r\n  }) : (\r\n    <div>no elements</div>\r\n  );\r\n\r\n  return(\r\n    <ThemeContex.Consumer>\r\n      {(theme)=>(\r\n        <section className=\"flowers\" style={{ background: theme.defaultTheme ? theme.light : theme.dark }}>\r\n          <AddFlower addFlower={contex.addFlower} />\r\n          <ul className=\"flower_list\">\r\n            {FLOWER_LIST}\r\n          </ul>\r\n        </section>\r\n  )}\r\n    </ThemeContex.Consumer>\r\n  );\r\n    \r\n\r\n \r\n};\r\n\r\nexport default Flowers;\r\n","import React, {useContext} from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { FlowerContex } from '../../contex/FlowerState';\r\nimport {ThemeContex } from '../../contex/ThemeContex';\r\n\r\nconst Flower = (props) => {\r\n  const contex = useContext(FlowerContex);\r\n  const flower = contex.flowers.find(\r\n    element => element.name === props.match.params.id\r\n  );\r\n  return (\r\n    <ThemeContex.Consumer>\r\n      {(theme)=>(\r\n        <section className=\"flower\" style={{ background: theme.defaultTheme ? theme.light : theme.dark}}>\r\n          <div>\r\n            <Link to=\"/flowers\">\r\n              <img src=\"https://image.flaticon.com/icons/svg/860/860774.svg\" alt=\"arrow\" />\r\n            </Link>\r\n            <h1>\r\n              {flower.id}\r\n              .  \r\n              {flower.name}\r\n            </h1>\r\n            <button\r\n              type=\"button\"\r\n              onClick={()=>{\r\n              props.history.push('/flowers');\r\n              contex.removeFlower(flower.id);}}\r\n            >\r\n              DELETE\r\n            </button>\r\n          </div>\r\n          <img src={flower.url} alt=\"flower\" />\r\n        </section>\r\n    )}\r\n    </ThemeContex.Consumer>\r\n  );\r\n};\r\n\r\nexport default Flower;","import React from 'react';\nimport './App.scss';\nimport {  HashRouter, Route, Switch } from 'react-router-dom';\n\nimport Nav from './components/Nav';\nimport Footer from './components/Footer';\nimport Home from './components/Home/Home';\nimport ThemeContexProvider from './contex/ThemeContex';\nimport Flowers from './components/Flowers/Flowers';\nimport Flower from './components/Flower/Flower';\n\nimport {FlowerProvider} from './contex/FlowerState';\n\nfunction App() {\n  return (\n    <HashRouter>\n      <ThemeContexProvider>\n        <Nav />\n        <Switch>\n          <Route exact path=\"/\" component={Home} />\n          <FlowerProvider>\n            <Route exact path=\"/flowers\" component={Flowers} />\n            <Route exact path=\"/flowers/:id\" component={Flower} />\n          </FlowerProvider>\n        </Switch>\n        <Footer />\n      </ThemeContexProvider>\n    </HashRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}